name: Release

on:
  pull_request:
    branches:
      - main
      - develop
    types: [closed]

jobs:
  release:
    if: github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'NOT RELEASE') == false
    runs-on: "ubuntu-latest"

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Cria arquivo .env
        run: |
          touch ./scripts/.env
          echo TOKEN=${{ secrets.API_TOKEN_GITHUB }} >> ./scripts/.env
          echo RELEASE_MAJOR=${{ contains(github.event.pull_request.labels.*.name, 'MAJOR RELEASE') }} >> ./scripts/.env
          echo RELEASE_MINOR=${{ contains(github.event.pull_request.labels.*.name, 'MINOR RELEASE') }} >> ./scripts/.env
          echo RELEASE_FIX=${{ contains(github.event.pull_request.labels.*.name, 'FIX RELEASE') }} >> ./scripts/.env
          echo DEVELOP=${{ contains(github.event.pull_request.labels.*.name, 'DEVELOP') }} >> ./scripts/.env

      - name: Gera release e envia métricas para repositório de DOC
        run: |
          cd scripts && yarn install && node release.js
          git config --global user.email "${{secrets.GIT_USER_EMAIL}}"
          git config --global user.name "${{secrets.GIT_USER_NAME}}"
          git clone --single-branch --branch main "https://x-access-token:${{secrets.API_TOKEN_GITHUB}}@github.com/fga-eps-mds/${{secrets.GIT_DOC_REPO}}" ${{secrets.GIT_DOC_REPO}}
          mkdir -p ${{secrets.GIT_DOC_REPO}}/analytics-raw-data
          cp -R analytics-raw-data/*.json ${{secrets.GIT_DOC_REPO}}/analytics-raw-data
          cd ${{secrets.GIT_DOC_REPO}}
          git add .
          git commit -m "Adicionando métricas do repositório ${{ github.event.repository.name }} ${{ github.ref_name }}"
          git push
